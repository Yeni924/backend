buildscript {
    ext {
        queryDslVersion = "5.0.0"
        springBootVersion = "2.7.5"
    }

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath 'io.spring.gradle:dependency-management-plugin:1.0.11.RELEASE'
    }
}

plugins{
    id 'com.ewerk.gradle.plugins.querydsl' version "1.0.10"
}


subprojects {
    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    group 'com.mococo'
    version '1.0-SNAPSHOT'

    sourceCompatibility = '15'
    targetCompatibility = '15'
    compileJava.options.encoding = 'UTF-8'

    repositories {
        mavenCentral()
    }

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-validation'
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.0'
        implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.13.4.2'

        compileOnly 'org.projectlombok:lombok'


        runtimeOnly 'com.h2database:h2'
        annotationProcessor "jakarta.persistence:jakarta.persistence-api"
        annotationProcessor "jakarta.annotation:jakarta.annotation-api"
        annotationProcessor 'org.projectlombok:lombok'
        annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'

        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
    }

    test {
        useJUnitPlatform()
    }
}

project(':core') {
    bootJar { enabled = false }
    jar { enabled = true }

    dependencies {
        runtimeOnly 'com.mysql:mysql-connector-j'
        implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
        implementation "com.querydsl:querydsl-apt:${queryDslVersion}"
    }
}

project(':api') {
    bootJar { enabled = true }
    jar { enabled = false }

    dependencies {
        compile project(':core')
        implementation 'org.springframework.boot:spring-boot-starter-actuator'
       implementation 'org.springframework.boot:spring-boot-starter-security'

        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.2'

        implementation group: 'org.springdoc', name: 'springdoc-openapi-data-rest', version: '1.6.12'
        implementation group: 'org.springdoc', name: 'springdoc-openapi-ui', version: '1.6.12'

        testImplementation 'org.springframework.security:spring-security-test'
    }
}


clean {
    delete file('src/main/generated')
}

def querydslDir = "$buildDir/generated/querydsl"

querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}

sourceSets {
    main.java.srcDir querydslDir
}

compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}
configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}